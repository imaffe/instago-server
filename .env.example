# Supabase Configuration
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_PROJECT_ID=your-project
SUPABASE_ANON_KEY=your-supabase-anon-key
SUPABASE_SERVICE_KEY=your-supabase-service-key
SUPABASE_JWT_SECRET=your-supabase-jwt-secret

# Database Configuration
# For Supabase: postgresql://postgres:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres
# For local: postgresql://postgres:password@localhost:5432/instago
DATABASE_URL=postgresql://postgres:password@localhost:5432/instago

# Google Cloud Storage
GCS_BUCKET_NAME=instago-screenshots
GOOGLE_APPLICATION_CREDENTIALS=/path/to/gcp-credentials.json

# Milvus Vector Database
MILVUS_HOST=localhost
MILVUS_PORT=19530
MILVUS_TOKEN=your-milvus-token
MILVUS_COLLECTION_NAME=screenshots

# OpenAI Configuration
OPENAI_API_KEY=your-openai-api-key
OPENAI_MODEL=gpt-4o
OPENAI_EMBEDDING_DIM=1536

# OpenRouter Configuration (Optional)
OPENROUTER_API_KEY=your-openrouter-api-key
OPENROUTER_MODEL=qwen/qwen-vl-max
OPENROUTER_SITE_URL=https://instago.app
OPENROUTER_SITE_NAME=Instago

# Google Vertex AI Configuration (Optional)
# Method 1: Use specific settings
VERTEX_AI_PROJECT=your-gcp-project-id
VERTEX_AI_LOCATION=us-central1
GEMINI_MODEL=gemini-2.0-flash-exp

# Method 2: Use Google GenAI SDK environment variables (recommended)
# GOOGLE_CLOUD_PROJECT=your-gcp-project-id
# GOOGLE_CLOUD_LOCATION=global
# GOOGLE_GENAI_USE_VERTEXAI=True

# Agent Selection - Choose which AI agent to use for screenshots
# Options: "openai" (default), "gemini", "openrouter"
AGENT_NAME=openai

# Application Configuration
ENVIRONMENT=development
LOG_LEVEL=INFO
API_V1_PREFIX=/api/v1
PROJECT_NAME=Instago Server
VERSION=0.1.0

# CORS Configuration
BACKEND_CORS_ORIGINS=["http://localhost:3000","http://localhost:8000"]